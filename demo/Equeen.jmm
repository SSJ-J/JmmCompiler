class Queen{
	private int[] column;
    private int[] rup;
	private int[] lup;
	private int[] queen;
	private int num;
 
	public void Queen(){
		column=new int[8+1];
		rup=new int[(2*8)+1];
		lup=new int[(2*8)+1];

		int i;
		for(i=1;i<=8;i=i+1)
		column[i]=1;

		for(i=1;i<=(2*8);i=i+1)
		rup[i]=1;
		lup[i]=1;
 
		queen=new int[8+1];
	}

	public void backtrack(int i){
		if(i>8){
			showAnswer();
		}else{
			int j;
			for(j=1;j<=8;j=j+1){
				if((column[j]==1)&&(rup[i+j]==1)&&(lup[i-j+8]==1)){
					queen[i]=j;
					column[j]=0;
					rup[i+j]=0;
					lup[i-j+8]=0;
					backtrack(i+1);
					column[j]=1;
					rup[i+j]=1;
					lup[i-j+8]=1;
				}
			}
		}
	}
 
	protected void showAnswer(){
		num = num + 1;
		println(num);

		int x;
        int y;
		for(y=1;y<=8;y=y+1){
			for(x=1;x<=8;x=x+1){
				if(queen[y]==x){
					print('Q');
				}else{
					print('.');
				}
			}
		}
	}
}

class Equeen{
	public void main(){
		Queen queen=new Queen();
		queen.backtrack(1);
	}
}