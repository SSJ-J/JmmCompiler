class Equeen{
	private int[] column;
    private int[] rup;
	private int[] lup;
	private int[] queen;
	private int num;
 
	public void Queen(){
		column=new int[9];
		rup=new int[17];
		lup=new int[17];

		int i=1;
        while (i<=8){
            column[i]=1;
            i=i+1;
        }
        
        i=1;
        while (i<=16){
            rup[i]=1;
            lup[i]=1;
            i=i+1;
        } 
 
		queen=new int[9];
	}

	public void backtrack(int i){
		if(i>8){
			showAnswer();
		}else{
			int j=1;
            while (j<=8){
                if (column[j]==1){
                    if (rup[i+j]==1){
                        int p;
                        p=i-j;
                        if (lup[p+8]==1){
                            queen[i]=j;
                            column[j]=0;
                            rup[i+j]=0;
                            lup[p+8]=0;
                            int q;
                            q=i+1;
                            backtrack(q);
                            column[j]=1;
                            rup[i+j]=1;
                            lup[p+8]=1;
                        }
                    }
                }
                j=j+1;
            }
		}
	}
 
	protected void showAnswer(){
		num = num + 1;
		print(num);

		int x;
        int y=1;
        while (y<=8){
            x=1;
            while (x<=8){
				if(queen[y]==x){
					print(1);
				}
                if (queen[y]!=x){
					print(0);
				}
                x=x+1;
            }
            y=y+1;
        }
	}
	public void main(){
		Queen();
		backtrack(1);
	}
}